
# PyEnv stuff
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

export PATH="$HOME/.yarn/bin:$PATH"
export PATH="$HOME/.config/bin:$PATH"

# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.
# if [ -s "$HOME/.nvm/nvm.sh" ] && [ ! "$(type -t __init_nvm)" = function ]; then
if [ -s "$HOME/.nvm/nvm.sh" ] ; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"
  declare -a __node_commands=('nvm' 'node' 'npm' 'yarn' 'gulp' 'grunt' 'webpack')
  function __init_nvm() {
    for i in "${__node_commands[@]}"; do unalias $i; done
    . "$NVM_DIR"/nvm.sh
    unset __node_commands
    unset -f __init_nvm
  }
  for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi

# flutter
export PATH="$HOME/Projects/flutter/bin/:$PATH"

# Android SDK
export ANDROID_HOME=/usr/local/share/android-sdk

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# ZSH_THEME="dracula/dracula"
ZSH_THEME=""
DEV_ALLOW_ITERM2_INTEGRATION=1
export FZF_DEFAULT_COMMAND="rg --files --hidden --glob '!.git/*'"

export SHELL='zsh'
export EDITOR='nvim'

# Plugins
# (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
plugins=(
  git
  colored-man
  colorize
  github
  virtualenv
  brew
  osx
  z
  zsh-syntax-highlighting
  zsh-completions
  zsh-autosuggestions
  fzf-zsh
)

source $ZSH/oh-my-zsh.sh
source $DOTFILES/zsh/aliases.zsh
source $DOTFILES/zsh/functions.zsh

# Shopify's dev resource
source /opt/dev/dev.sh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Vi mode for zsh input
bindkey -v
export KEYTIMEOUT=1
# Backspace over insert start point
bindkey "^?" backward-delete-char


# ctrl+z in zsh types fg then hits enter to jump back to the last job.
bindkey -s '^z' "fg\n"

# CTRL-R - Paste the selected command from history into the command line
fzf-history-widget() {
  local selected restore_no_bang_hist
  if selected=$(fc -l 1 | $(__fzfcmd) +s --tac +m -n2..,.. --tiebreak=index --toggle-sort=ctrl-r -q "$LBUFFER"); then
    num=$(echo "$selected" | head -1 | awk '{print $1}' | sed 's/[^0-9]//g')
    LBUFFER=!$num
    if setopt | grep nobanghist > /dev/null; then
      restore_no_bang_hist=1
      unsetopt no_bang_hist
    fi
    zle expand-history
    [ -n "$restore_no_bang_hist" ] && setopt no_bang_hist
  fi
  zle redisplay
}
zle     -N   fzf-history-widget
bindkey '^R' fzf-history-widget

eval "$(pyenv init -)"
export PATH="/usr/local/opt/libxml2/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"


# Prue prompt
autoload -U promptinit; promptinit
prompt pure
